// Реализация шагов BDD-фич/сценариев c помощью фреймворка https://github.com/artbear/1bdd

#Использовать asserts

Перем БДД; //контекст фреймворка 1bdd

// Метод выдает список шагов, реализованных в данном файле-шагов
Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;
	
	ВсеШаги = Новый Массив;
	
	ВсеШаги.Добавить("ЯДобавляюВнешнийРепозиторийПоАдресу");
	ВсеШаги.Добавить("ЯПолучаюСписокВнешнихРепозиториев");
	ВсеШаги.Добавить("СписокВнешнихРепозиториевСодержитСАдресом");
	ВсеШаги.Добавить("ЯУдаляюВнешнийРепозиторий");
	ВсеШаги.Добавить("ЯСохраняюЗначениеВременногоКаталогаВПеременной");
	ВсеШаги.Добавить("ЯДобавляюВнешнийРепозиторийПоСохраненномуАдресуВнешнегоРепозитория");
	
	Возврат ВсеШаги;
КонецФункции

// Реализация шагов

// Процедура выполняется перед запуском каждого сценария
Процедура ПередЗапускомСценария(Знач Узел) Экспорт
	
КонецПроцедуры

// Процедура выполняется после завершения каждого сценария
Процедура ПослеЗапускаСценария(Знач Узел) Экспорт
	
КонецПроцедуры

//Я удаляю внешний репозиторий "test"
Процедура ЯУдаляюВнешнийРепозиторий(Знач ИмяРепозитория) Экспорт
	ГитРепозиторий = БДД.ПолучитьИзКонтекста("ГитРепозиторий");
	ГитРепозиторий.УдалитьВнешнийРепозиторий(ИмяРепозитория);
КонецПроцедуры

//Я добавляю внешний репозиторий "test" по адресу "http://fake.com"
Процедура ЯДобавляюВнешнийРепозиторийПоАдресу(Знач ИмяРепозитория,Знач АдресРепозитория) Экспорт
	ГитРепозиторий = БДД.ПолучитьИзКонтекста("ГитРепозиторий");
	ГитРепозиторий.ДобавитьВнешнийРепозиторий(ИмяРепозитория, АдресРепозитория);
КонецПроцедуры

//Я получаю список внешних репозиториев
Процедура ЯПолучаюСписокВнешнихРепозиториев() Экспорт
	ГитРепозиторий = БДД.ПолучитьИзКонтекста("ГитРепозиторий");
	СписокВнешнихРепозиториев = ГитРепозиторий.ПолучитьСписокВнешнихРепозиториев();
	
	БДД.СохранитьВКонтекст("СписокВнешнихРепозиториев", СписокВнешнихРепозиториев);
КонецПроцедуры

//Список внешних репозиториев содержит "test1" с адресом "http://fake1.com"
Процедура СписокВнешнихРепозиториевСодержитСАдресом(Знач ИмяРепозитория, Знач АдресРепозитория) Экспорт
	СписокВнешнихРепозиториев = БДД.ПолучитьИзКонтекста("СписокВнешнихРепозиториев");
	
	Нашли = Ложь;
	СтрокаРепозиторий = Неопределено;
	Для Каждого ВнешнийРепозиторий Из СписокВнешнихРепозиториев Цикл
		
		Если НЕ СтрСравнить(ВнешнийРепозиторий.Имя, ИмяРепозитория) = 0  Тогда
			Продолжить;
		КонецЕсли;
		
		Нашли = Истина;
		Ожидаем.Что(ВнешнийРепозиторий.Адрес, "Репозиторий содержит неверный адрес").Равно(АдресРепозитория);

	КонецЦикла;	
	
	Ожидаем.Что(Нашли, "Список внешних репозиториев не содержит репозитория " + ИмяРепозитория).ЭтоИстина();
	
КонецПроцедуры

//Я сохраняю значение временного каталога в переменной "ВнешийРепозиторий"
Процедура ЯСохраняюЗначениеВременногоКаталогаВПеременной(Знач ИмяПеременной) Экспорт
	ВременныйКаталог = БДД.ПолучитьИзКонтекста("ВременныйКаталог");
	БДД.СохранитьВКонтекст(ИмяПеременной, ВременныйКаталог);
КонецПроцедуры

//Я добавляю внешний репозиторий "origin" по сохраненному адресу внешнего репозитория
Процедура ЯДобавляюВнешнийРепозиторийПоСохраненномуАдресуВнешнегоРепозитория(Знач ИмяРепозитория) Экспорт
	АдресРепозитория = БДД.ПолучитьИЗКонтекста("ВнешийРепозиторий");
	ЯДобавляюВнешнийРепозиторийПоАдресу(ИмяРепозитория, АдресРепозитория);
КонецПроцедуры





