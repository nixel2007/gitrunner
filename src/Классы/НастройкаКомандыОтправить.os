Перем ОтправкаRefspec;
Перем ПараметрыКомандыОтправки;
Перем URLРепозитория;
Перем ЗаголовкиОтправки;

// Функция возвращает массив параметров выполнения команды git
//
Функция ПолучитьПараметрыКоманды() Экспорт
	
	МассивПараметров = Новый Массив;
		
	Для каждого Настройка Из ПараметрыКомандыОтправки Цикл
		
		УстановитьПараметрКоманды(МассивПараметров, Настройка.Ключ, Настройка.Значение);
		
	КонецЦикла;

	Если ЗначениеЗаполнено(URLРепозитория) Тогда
		МассивПараметров.Добавить(URLРепозитория);
	КонецЕслИ;

	Для Каждого Заголовок Из ЗаголовкиОтправки Цикл
		МассивПараметров.Добавить(Заголовок);
	КонецЦикла;
	
	УдалитьВзаимоисключающиеПараметры(МассивПараметров);
	
	//МассивПараметров.Вставить(0, "push");
	
	Возврат МассивПараметров;
	
КонецФункции // ПолучитьНастройкиКоманды() Экспорт

// Функция возвращает стурктуру с текущими настройками отправки
//
//  Возвращаемое значение:
//   Структура  
//		Доступные ключи:
//			URLРепозитория - Строка - Признак текущей ветки
//			ЗаголовкиОтправки - Массив - Массив строк заголовков
//          ПараметрыКомандыОтправки - Соответсвие - Соответвие настроек команды (ключ - имя параметра, значение - булево)
Функция ПолучитьНастройки() Экспорт
	
	ТекущаяНастройкаОтправки = Новый Структура;
	ТекущаяНастройкаОтправки.Добавить("URLРепозитория", URLРепозитория);
	ТекущаяНастройкаОтправки.Добавить("ЗаголовкиОтправки", ЗаголовкиОтправки);
	ТекущаяНастройкаОтправки.Добавить("ПараметрыКомандыОтправки", ПараметрыКомандыОтправки);

	Возврат ТекущаяНастройкаОтправки;
	
КонецФункции

// Процедура устанавливает текущими настройками отправки по переданный структуре
//
//  Параметры
//     НовыеНастройкиОтправки - Структура  
//		  Доступные ключи:
//			  URLРепозитория - Строка - Признак текущей ветки
//			  ЗаголовкиОтправки - Массив - Массив строк заголовков
//            ПараметрыКомандыОтправки - Соответсвие - Соответвие настроек команды (ключ - имя параметра, значение - булево)
Процедура УстановитьНастройки(Знач НовыеНастройкиОтправки) Экспорт
	
	URLРепозитория = НовыеНастройкиОтправки.Получить("URLРепозитория");
	ЗаголовкиОтправки = НовыеНастройкиОтправки.Получить("ЗаголовкиОтправки");
	ПараметрыКомандыОтправки = НовыеНастройкиОтправки.Получить("ПараметрыКомандыОтправки");

КонецПроцедуры

// Процедура добавляет произвольный заголовок настройками отправки
//
//  Параметры
//     ЗаголовокОтправки - Строка - значение заголовка отправки  
//	
Процедура ДобавитьПроизвольныйЗаголовокОтправки(Знач ЗаголовокОтправки) Экспорт
	
	ПроверитьЗаголовкиНаRefspec(ЗаголовокОтправки);
	
	ЗаголовкиОтправки.Добавить(ЗаголовокОтправки);

КонецПроцедуры

// Процедура устанавливает URL репозитория git в настройками отправки
//
//  Параметры
//     НовыйURLРепозитория - Строка - значение URL git репозитория или имя внешнего репозитория  
//	
Процедура УстановитьURLРепозиторияОтправки(Знач НовыйURLРепозитория) Экспорт

	URLРепозитория = НовыйURLРепозитория;
	
КонецПроцедуры // УстановитьРепозиторийОтправки()

// Процедура устанавливает массив заголовков отправки репозитория git в настройки отправки
//
//  Параметры
//     НовыйЗаголовкиОтправки - Строка/Массив - Строка или массив готовый заголовок отправки  
//
Процедура УстановитьЗаголовкиОтправки(Знач НовыйЗаголовкиОтправки) Экспорт
	
	
	Если Не ТипЗнч(НовыйЗаголовкиОтправки) = Тип("Массив") Тогда
		
		ПроверитьЗаголовкиНаRefspec(НовыйЗаголовкиОтправки);
		ЗаголовкиОтправки = Новый Массив;
	
		ЗаголовкиОтправки.Добавить(НовыйЗаголовкиОтправки); 
	Иначе

		ЗаголовкиОтправки = НовыйЗаголовкиОтправки;

	КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает параметры команды в настройки отправки
//
//  Параметры
//     Параметры - Соответвие - Соответвие настроек команды (ключ - имя параметра, значение - булево)  
//
Процедура УстановитьПараметрыКомандыОтправки(Знач Параметры) Экспорт
	
	ПараметрыКомандыОтправки = Параметры;

КонецПроцедуры

// Процедура добавляет заголовки отправки в настройки отправки
//
//  Параметры
//     ЗаголовокРабочейКопии - строка - строка с именем ветки или refspec рабочей копии   
//     ЗаголовокУдаленногоСервера - строка - строка с именем ветки или refspec удаленного сервера   
//	
Процедура ДобавитьЗаголовкиОтправки(ЗаголовокРабочейКопии = "", ЗаголовокУдаленногоСервера = "") Экспорт
	
	НовыйЗаголовокОтправки = "";
	
	Если НЕ ЗначениеЗаполнено(ЗаголовокУдаленногоСервера) Тогда
		
		НовыйЗаголовокОтправки = СтрШаблон("%1", ЗаголовокРабочейКопии);
		
	Иначе
		
		НовыйЗаголовокОтправки = СтрШаблон("%1:%2", ЗаголовокРабочейКопии, ЗаголовокУдаленногоСервера);
		
	КонецЕслИ;
	
	ДобавитьПроизвольныйЗаголовокОтправки(НовыйЗаголовокОтправки);
	
КонецПроцедуры

// Процедура устанавливает параметры отображения прогресса выполнения команды в настройки отправки
// git push --progress
//  Параметры
//     ЗначениеУстановки - булево - По умолчанию Истина 
Процедура ОтображатьПрогресс(Знач ЗначениеУстановки = Истина) Экспорт
	
	УстановитьПроизвольныйРежим("--progress", ЗначениеУстановки);
	
КонецПроцедуры

// Процедура устанавливает параметры режима тишины выполнения команды в настройки отправки
// git push --quiet
//  Параметры
//     ЗначениеУстановки - булево - По умолчанию Истина 
Процедура РежимТишины(Знач ЗначениеУстановки = Истина) Экспорт
	
	УстановитьПроизвольныйРежим("--quiet", ЗначениеУстановки);
	
КонецПроцедуры

// Процедура устанавливает параметры режима зеркала выполнения команды в настройки отправки
// git push --mirror
//  Параметры
//     ЗначениеУстановки - булево - По умолчанию Истина 
Процедура РежимЗеркала(Знач ЗначениеУстановки = Истина) Экспорт
	
	УстановитьПроизвольныйРежим("--mirror", ЗначениеУстановки);
	
КонецПроцедуры 

// Процедура устанавливает параметры режима удаления выполнения команды в настройки отправки
// git push --delete
//  Параметры
//     ЗначениеУстановки - булево - По умолчанию Истина 
Процедура РежимУдаления(Знач ЗначениеУстановки = Истина) Экспорт
	
	УстановитьПроизвольныйРежим("--delete", ЗначениеУстановки);
	
КонецПроцедуры

// Процедура устанавливает параметры режима полной отправки при выполнении команды в настройки отправки
// git push --all
//  Параметры
//     ЗначениеУстановки - булево - По умолчанию Истина 
Процедура ПолнаяОтправка(Знач ЗначениеУстановки = Истина) Экспорт
	
	УстановитьПроизвольныйРежим("--all", ЗначениеУстановки);
	
КонецПроцедуры

// Процедура устанавливает режим перезаписи истории при выполнении команды в настройки отправки
// git push --force
//  Параметры
//     ЗначениеУстановки - булево - По умолчанию Истина 
Процедура ПерезаписатьИсторию(Знач ЗначениеУстановки = Истина) Экспорт
	
	УстановитьПроизвольныйРежим("--force", ЗначениеУстановки);
	
КонецПроцедуры

// Процедура устанавливает необходимость отслеживать отправленные заголовки при выполнении команды в настройки отправки
// git push --set-upstream
//  Параметры
//     ЗначениеУстановки - булево - По умолчанию Истина 
Процедура Отслеживать(Знач ЗначениеУстановки = Истина) Экспорт
	
	УстановитьПроизвольныйРежим("--set-upstream", ЗначениеУстановки);
	
КонецПроцедуры

// Процедура устанавливает режим программной обработки результатов при выполнении команды в настройки отправки
// git push --porcelain
//  Параметры
//     ЗначениеУстановки - булево - По умолчанию Истина 
Процедура РежимПрограммнойОбработкаРезультата(Знач ЗначениеУстановки = Истина) Экспорт
	
	УстановитьПроизвольныйРежим("--porcelain", ЗначениеУстановки);
	
КонецПроцедуры

// Процедура устанавливает режим отправки тегов при выполнении команды в настройки отправки
// git push --tags
//  Параметры
//     ЗначениеУстановки - булево - По умолчанию Истина 
Процедура ОтправкаТегов(Знач ЗначениеУстановки = Истина) Экспорт
	
	УстановитьПроизвольныйРежим("--tags", ЗначениеУстановки);
	
КонецПроцедуры

// Процедура устанавливает произвольную настройку при выполнении команды в настройки отправки
//
//  Параметры
//     НаименованиеПараметра - строка - Наименование параметра настройки
//     ЗначениеУстановки - булево - По умолчанию Истина
Процедура УстановитьПроизвольныйРежим(Знач НаименованиеПараметра, Знач ЗначениеУстановки = Истина) Экспорт
		
	ПараметрыКомандыОтправки.Вставить(НаименованиеПараметра, ЗначениеУстановки);

КонецПроцедуры

Процедура ЗаполнитьНастройкиПоУмолчанию()
	
	ПараметрыКомандыОтправки = Новый Соответствие;
	Отключить = Ложь;
	
	РежимПрограммнойОбработкаРезультата();
	РежимУдаления(Отключить);
	РежимЗеркала(Отключить);
	РежимТишины(Отключить);
	
	Отслеживать(Отключить);
	ОтправкаТегов(Отключить);
	ПерезаписатьИсторию(Отключить);
	ПолнаяОтправка(Отключить);
	ОтображатьПрогресс(Отключить);
	
	URLРепозитория = "";
	ЗаголовкиОтправки = Новый Массив;
	
	ОтправкаRefspec = Ложь;
	
КонецПроцедуры

Процедура ПроверитьЗаголовкиНаRefspec(Знач ЗаголовокОтправки)
	
	Если ОтправкаRefspec Тогда
		Возврат;
	КонецЕсли;	
	
	Если СтрНайти("refs/", ЗаголовокОтправки) > 0 Тогда
		
		ОтправкаRefspec = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПараметрКоманды(МассивПараметров, Знач КлючПараметра, Знач ЗначениеПараметра)
	
	Если ТипЗнч(ЗначениеПараметра) = Тип("Булево") Тогда
		Если Не ЗначениеПараметра Тогда
			Возврат;
		КонецЕсли;
		МассивПараметров.Добавить(КлючПараметра);
	Иначе
		МассивПараметров.Добавить(КлючПараметра);
		МассивПараметров.Добавить(ЗначениеПараметра);
	КонецЕсли;

КонецПроцедуры

Процедура УдалитьВзаимоисключающиеПараметры(МассивПараметров)
	
	МассивПроверки = МассивВзаимоисключающихПараметров();
	
	ЭлементПроверки = Неопределено;
	
	Для каждого Параметр Из МассивПараметров Цикл
		
		ИндексЭлементаПроверки = МассивПроверки.Найти(Параметр);
		
		Если НЕ ИндексЭлементаПроверки = Неопределено Тогда
			ЭлементПроверки = МассивПроверки.Получить(ИндексЭлементаПроверки);
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЭлементПроверки = Неопределено Тогда
		
		Для каждого ПараметрДляУдаления Из МассивПроверки Цикл
			
			Если ЭлементПроверки = ПараметрДляУдаления Тогда
				Продолжить;
			КонецЕсли;
			
			ИндексЭлементаУдаления = МассивПараметров.Найти(ПараметрДляУдаления);
			
			Если НЕ ИндексЭлементаУдаления = Неопределено Тогда
				МассивПараметров.Удалить(ИндексЭлементаУдаления);
			КонецЕсли;
			
			Если Не ПараметрСовместимСRefspec(ПараметрДляУдаления) Тогда

				ИндексЭлементаУдаления = МассивПараметров.Найти(ПараметрДляУдаления);
					
				Если НЕ ИндексЭлементаУдаления = Неопределено Тогда
					МассивПараметров.Удалить(ИндексЭлементаУдаления);
				КонецЕсли;
			
			КонецЕсли;
		КонецЦикла;
		
	КонецЕслИ;

КонецПроцедуры

Функция ПараметрСовместимСRefspec(Знач КлючПараметра)
	
	Если Не ОтправкаRefspec Тогда
		Возврат Истина;
	КонецЕсли;
	
	МассивПроверки = МассивНесовместимыхПараметровСRefspec();
	Если ЗначениеЗаполнено(МассивПроверки.Найти(КлючПараметра)) Тогда
		Возврат Ложь;
	КонецЕслИ;
	
КонецФункции // ПроверитьСовместимостьПараметра()

Функция МассивНесовместимыхПараметровСRefspec()
	
	ФиксированныйМассив = Новый Массив;
	ФиксированныйМассив.Добавить("--all");
	ФиксированныйМассив.Добавить("--mirror");
	ФиксированныйМассив.Добавить("--tags");
	
	Возврат ФиксированныйМассив;
	
КонецФункции

Функция МассивВзаимоисключающихПараметров()
	
	ФиксированныйМассив = Новый Массив;
	ФиксированныйМассив.Добавить("--all");
	ФиксированныйМассив.Добавить("--mirror");
	ФиксированныйМассив.Добавить("--tags");
	ФиксированныйМассив.Добавить("--delete");
	
	Возврат ФиксированныйМассив;

КонецФункции

Процедура Инициализация()
	
	ЗаполнитьНастройкиПоУмолчанию();
	
КонецПроцедуры

Инициализация();


